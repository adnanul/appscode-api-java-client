syntax = "proto3";

package appscode.auth.v1beta1;

option go_package = "v1beta1";

option java_multiple_files = true;
option java_outer_classname = "AuthenticationProto";
option java_package = "com.appscode.api.auth.v1beta1";

import "google/api/annotations.proto";
import "appscode/api/annotations.proto";
import "appscode/api/dtypes/types.proto";

service Authentication {
  // This rpc is used to check a valid user from other applications.
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/_appscode/api/auth/v1beta1/login/json"
      body : "*"
      additional_bindings {
        post : "/_appscode/api/auth/v0.1/login"
        body : "*"
      }
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post : "/_appscode/api/auth/v1beta1/logout/json"
      body : "*"
      additional_bindings {
        post : "/_appscode/api/auth/v0.1/logout"
        body : "*"
      }
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }
  // appctl used this to validates the user token with phabricator.
  rpc Token(TokenRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/_appscode/api/auth/v1beta1/token/json"
      body: "*"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc CSRFToken(dtypes.VoidRequest) returns (CSRFTokenResponse) {
    option (google.api.http) = {
      get: "/_appscode/api/auth/v1beta1/csrf-token/json"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }
}

message CSRFTokenResponse {
  dtypes.Status status = 1;
  string csrf_token = 2;
}

//Next Id 4
message TokenRequest {
  string namespace = 1;
  string token = 2;
}

message TokenResponse {
  dtypes.Status status = 1;
}

message LoginRequest {
  string namespace = 1;
  string username = 2;
  string secret = 3;
  bool issue_token = 4;
}

message LoginResponse {
  dtypes.Status status = 1;
  string token = 2;
}

message LogoutRequest {
  string namespace = 1;
  string token = 2;
}

message LogoutResponse {
  dtypes.Status status = 1;
}