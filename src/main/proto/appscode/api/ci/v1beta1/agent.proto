syntax = "proto3";

package appscode.ci.v1beta1;

option go_package = "v1beta1";

option java_multiple_files = true;
option java_outer_classname = "AgentProto";
option java_package = "com.appscode.api.ci.v1beta1";

import "google/api/annotations.proto";
import "appscode/api/annotations.proto";
import "appscode/api/dtypes/types.proto";

service Agents {
  rpc List(dtypes.VoidRequest) returns (AgentListResponse) {
    option (google.api.http) = {
      get: "/_appscode/api/ci/v1beta1/agents"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Create(AgentCreateRequest) returns (AgentCreateResponse) {
    option (google.api.http) = {
      post: "/_appscode/api/ci/v1beta1/agents"
      body: "*"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }

  rpc Delete(AgentDeleteRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/_appscode/api/ci/v1beta1/agents/{name}"
    };
    option (appscode.api.cors) = {
      enable: true
    };
  }
}

message AgentListResponse {
  dtypes.Status status = 1;
  repeated Agent agents = 2;
}

message Agent {
  string name = 1;
  string role = 2;
  string external_ip = 3;
  string internal_ip = 4;
  bool isDeleted = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

message AgentCreateRequest {
  string name = 1;
  string role = 2;
  string external_ip = 3;
  string internal_ip = 4;
  string ssh_user = 5;
  int32 ssh_port = 6;
  int32 jenkins_jnlp_port = 7;
  string git_ssh_public_key = 8;
}

message AgentCreateResponse {
  dtypes.Status status = 1;
  string namespace = 2;
  string ssh_authorized_public_key = 3; // authorized to ssh
  string git_hostname = 4;
  string git_host_public_key = 5; // known_host
  message ConduitUser {
    string phid = 1;
    string user_name = 2;
    string token = 3;
    string email = 4;
  }
  ConduitUser git_user = 6;
}

message AgentDeleteRequest {
  string name = 1;
}
