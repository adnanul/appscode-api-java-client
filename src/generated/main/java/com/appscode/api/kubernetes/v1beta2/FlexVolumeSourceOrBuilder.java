// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

public interface FlexVolumeSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:appscode.kubernetes.v1beta2.FlexVolumeSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Driver is the name of the driver to use for this volume.
   * </pre>
   *
   * <code>string driver = 1;</code>
   */
  java.lang.String getDriver();
  /**
   * <pre>
   * Driver is the name of the driver to use for this volume.
   * </pre>
   *
   * <code>string driver = 1;</code>
   */
  com.google.protobuf.ByteString
      getDriverBytes();

  /**
   * <pre>
   * Filesystem type to mount.
   * Must be a filesystem type supported by the host operating system.
   * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   * </pre>
   *
   * <code>string fsType = 2;</code>
   */
  java.lang.String getFsType();
  /**
   * <pre>
   * Filesystem type to mount.
   * Must be a filesystem type supported by the host operating system.
   * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   * </pre>
   *
   * <code>string fsType = 2;</code>
   */
  com.google.protobuf.ByteString
      getFsTypeBytes();

  /**
   * <pre>
   * Optional: SecretRef is reference to the secret object containing
   * sensitive information to pass to the plugin scripts. This may be
   * empty if no secret object is specified. If the secret object
   * contains more than one secret, all secrets are passed to the plugin
   * scripts.
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
   */
  boolean hasSecretRef();
  /**
   * <pre>
   * Optional: SecretRef is reference to the secret object containing
   * sensitive information to pass to the plugin scripts. This may be
   * empty if no secret object is specified. If the secret object
   * contains more than one secret, all secrets are passed to the plugin
   * scripts.
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef();
  /**
   * <pre>
   * Optional: SecretRef is reference to the secret object containing
   * sensitive information to pass to the plugin scripts. This may be
   * empty if no secret object is specified. If the secret object
   * contains more than one secret, all secrets are passed to the plugin
   * scripts.
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder();

  /**
   * <pre>
   * Optional: Defaults to false (read/write). ReadOnly here will force
   * the ReadOnly setting in VolumeMounts.
   * </pre>
   *
   * <code>bool readOnly = 4;</code>
   */
  boolean getReadOnly();

  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */
  int getOptionsCount();
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */
  boolean containsOptions(
      java.lang.String key);
  /**
   * Use {@link #getOptionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getOptions();
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getOptionsMap();
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */

  java.lang.String getOptionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */

  java.lang.String getOptionsOrThrow(
      java.lang.String key);
}
