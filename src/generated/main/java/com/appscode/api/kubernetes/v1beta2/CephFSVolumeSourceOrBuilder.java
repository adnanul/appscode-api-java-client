// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

public interface CephFSVolumeSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:appscode.kubernetes.v1beta2.CephFSVolumeSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  java.util.List<java.lang.String>
      getMonitorsList();
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  int getMonitorsCount();
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  java.lang.String getMonitors(int index);
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  com.google.protobuf.ByteString
      getMonitorsBytes(int index);

  /**
   * <pre>
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   * </pre>
   *
   * <code>string path = 2;</code>
   */
  java.lang.String getPath();
  /**
   * <pre>
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   * </pre>
   *
   * <code>string path = 2;</code>
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * Optional: User is the rados user name, default is admin
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string user = 3;</code>
   */
  java.lang.String getUser();
  /**
   * <pre>
   * Optional: User is the rados user name, default is admin
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string user = 3;</code>
   */
  com.google.protobuf.ByteString
      getUserBytes();

  /**
   * <pre>
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string secretFile = 4;</code>
   */
  java.lang.String getSecretFile();
  /**
   * <pre>
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string secretFile = 4;</code>
   */
  com.google.protobuf.ByteString
      getSecretFileBytes();

  /**
   * <pre>
   * Optional: SecretRef is reference to the authentication secret for User, default is empty.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
   */
  boolean hasSecretRef();
  /**
   * <pre>
   * Optional: SecretRef is reference to the authentication secret for User, default is empty.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef();
  /**
   * <pre>
   * Optional: SecretRef is reference to the authentication secret for User, default is empty.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder();

  /**
   * <pre>
   * Optional: Defaults to false (read/write). ReadOnly here will force
   * the ReadOnly setting in VolumeMounts.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>bool readOnly = 6;</code>
   */
  boolean getReadOnly();
}
