// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

public interface VolumeSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:appscode.kubernetes.v1beta2.VolumeSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * HostPath represents a pre-existing file or directory on the host
   * machine that is directly exposed to the container. This is generally
   * used for system agents or other privileged things that are allowed
   * to see the host machine. Most containers will NOT need this.
   * More info: http://kubernetes.io/docs/user-guide/volumes#hostpath
   * ---
   * TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
   * mount host directories as read/write.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.HostPathVolumeSource hostPath = 1;</code>
   */
  boolean hasHostPath();
  /**
   * <pre>
   * HostPath represents a pre-existing file or directory on the host
   * machine that is directly exposed to the container. This is generally
   * used for system agents or other privileged things that are allowed
   * to see the host machine. Most containers will NOT need this.
   * More info: http://kubernetes.io/docs/user-guide/volumes#hostpath
   * ---
   * TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
   * mount host directories as read/write.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.HostPathVolumeSource hostPath = 1;</code>
   */
  com.appscode.api.kubernetes.v1beta2.HostPathVolumeSource getHostPath();
  /**
   * <pre>
   * HostPath represents a pre-existing file or directory on the host
   * machine that is directly exposed to the container. This is generally
   * used for system agents or other privileged things that are allowed
   * to see the host machine. Most containers will NOT need this.
   * More info: http://kubernetes.io/docs/user-guide/volumes#hostpath
   * ---
   * TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
   * mount host directories as read/write.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.HostPathVolumeSource hostPath = 1;</code>
   */
  com.appscode.api.kubernetes.v1beta2.HostPathVolumeSourceOrBuilder getHostPathOrBuilder();

  /**
   * <pre>
   * EmptyDir represents a temporary directory that shares a pod's lifetime.
   * More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.EmptyDirVolumeSource emptyDir = 2;</code>
   */
  boolean hasEmptyDir();
  /**
   * <pre>
   * EmptyDir represents a temporary directory that shares a pod's lifetime.
   * More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.EmptyDirVolumeSource emptyDir = 2;</code>
   */
  com.appscode.api.kubernetes.v1beta2.EmptyDirVolumeSource getEmptyDir();
  /**
   * <pre>
   * EmptyDir represents a temporary directory that shares a pod's lifetime.
   * More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.EmptyDirVolumeSource emptyDir = 2;</code>
   */
  com.appscode.api.kubernetes.v1beta2.EmptyDirVolumeSourceOrBuilder getEmptyDirOrBuilder();

  /**
   * <pre>
   * GCEPersistentDisk represents a GCE Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GCEPersistentDiskVolumeSource gcePersistentDisk = 3;</code>
   */
  boolean hasGcePersistentDisk();
  /**
   * <pre>
   * GCEPersistentDisk represents a GCE Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GCEPersistentDiskVolumeSource gcePersistentDisk = 3;</code>
   */
  com.appscode.api.kubernetes.v1beta2.GCEPersistentDiskVolumeSource getGcePersistentDisk();
  /**
   * <pre>
   * GCEPersistentDisk represents a GCE Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GCEPersistentDiskVolumeSource gcePersistentDisk = 3;</code>
   */
  com.appscode.api.kubernetes.v1beta2.GCEPersistentDiskVolumeSourceOrBuilder getGcePersistentDiskOrBuilder();

  /**
   * <pre>
   * AWSElasticBlockStore represents an AWS Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 4;</code>
   */
  boolean hasAwsElasticBlockStore();
  /**
   * <pre>
   * AWSElasticBlockStore represents an AWS Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 4;</code>
   */
  com.appscode.api.kubernetes.v1beta2.AWSElasticBlockStoreVolumeSource getAwsElasticBlockStore();
  /**
   * <pre>
   * AWSElasticBlockStore represents an AWS Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 4;</code>
   */
  com.appscode.api.kubernetes.v1beta2.AWSElasticBlockStoreVolumeSourceOrBuilder getAwsElasticBlockStoreOrBuilder();

  /**
   * <pre>
   * GitRepo represents a git repository at a particular revision.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GitRepoVolumeSource gitRepo = 5;</code>
   */
  boolean hasGitRepo();
  /**
   * <pre>
   * GitRepo represents a git repository at a particular revision.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GitRepoVolumeSource gitRepo = 5;</code>
   */
  com.appscode.api.kubernetes.v1beta2.GitRepoVolumeSource getGitRepo();
  /**
   * <pre>
   * GitRepo represents a git repository at a particular revision.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GitRepoVolumeSource gitRepo = 5;</code>
   */
  com.appscode.api.kubernetes.v1beta2.GitRepoVolumeSourceOrBuilder getGitRepoOrBuilder();

  /**
   * <pre>
   * Secret represents a secret that should populate this volume.
   * More info: http://kubernetes.io/docs/user-guide/volumes#secrets
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.SecretVolumeSource secret = 6;</code>
   */
  boolean hasSecret();
  /**
   * <pre>
   * Secret represents a secret that should populate this volume.
   * More info: http://kubernetes.io/docs/user-guide/volumes#secrets
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.SecretVolumeSource secret = 6;</code>
   */
  com.appscode.api.kubernetes.v1beta2.SecretVolumeSource getSecret();
  /**
   * <pre>
   * Secret represents a secret that should populate this volume.
   * More info: http://kubernetes.io/docs/user-guide/volumes#secrets
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.SecretVolumeSource secret = 6;</code>
   */
  com.appscode.api.kubernetes.v1beta2.SecretVolumeSourceOrBuilder getSecretOrBuilder();

  /**
   * <pre>
   * NFS represents an NFS mount on the host that shares a pod's lifetime
   * More info: http://kubernetes.io/docs/user-guide/volumes#nfs
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.NFSVolumeSource nfs = 7;</code>
   */
  boolean hasNfs();
  /**
   * <pre>
   * NFS represents an NFS mount on the host that shares a pod's lifetime
   * More info: http://kubernetes.io/docs/user-guide/volumes#nfs
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.NFSVolumeSource nfs = 7;</code>
   */
  com.appscode.api.kubernetes.v1beta2.NFSVolumeSource getNfs();
  /**
   * <pre>
   * NFS represents an NFS mount on the host that shares a pod's lifetime
   * More info: http://kubernetes.io/docs/user-guide/volumes#nfs
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.NFSVolumeSource nfs = 7;</code>
   */
  com.appscode.api.kubernetes.v1beta2.NFSVolumeSourceOrBuilder getNfsOrBuilder();

  /**
   * <pre>
   * ISCSI represents an ISCSI Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ISCSIVolumeSource iscsi = 8;</code>
   */
  boolean hasIscsi();
  /**
   * <pre>
   * ISCSI represents an ISCSI Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ISCSIVolumeSource iscsi = 8;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ISCSIVolumeSource getIscsi();
  /**
   * <pre>
   * ISCSI represents an ISCSI Disk resource that is attached to a
   * kubelet's host machine and then exposed to the pod.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ISCSIVolumeSource iscsi = 8;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ISCSIVolumeSourceOrBuilder getIscsiOrBuilder();

  /**
   * <pre>
   * Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GlusterfsVolumeSource glusterfs = 9;</code>
   */
  boolean hasGlusterfs();
  /**
   * <pre>
   * Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GlusterfsVolumeSource glusterfs = 9;</code>
   */
  com.appscode.api.kubernetes.v1beta2.GlusterfsVolumeSource getGlusterfs();
  /**
   * <pre>
   * Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.GlusterfsVolumeSource glusterfs = 9;</code>
   */
  com.appscode.api.kubernetes.v1beta2.GlusterfsVolumeSourceOrBuilder getGlusterfsOrBuilder();

  /**
   * <pre>
   * PersistentVolumeClaimVolumeSource represents a reference to a
   * PersistentVolumeClaim in the same namespace.
   * More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.PersistentVolumeClaimVolumeSource persistentVolumeClaim = 10;</code>
   */
  boolean hasPersistentVolumeClaim();
  /**
   * <pre>
   * PersistentVolumeClaimVolumeSource represents a reference to a
   * PersistentVolumeClaim in the same namespace.
   * More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.PersistentVolumeClaimVolumeSource persistentVolumeClaim = 10;</code>
   */
  com.appscode.api.kubernetes.v1beta2.PersistentVolumeClaimVolumeSource getPersistentVolumeClaim();
  /**
   * <pre>
   * PersistentVolumeClaimVolumeSource represents a reference to a
   * PersistentVolumeClaim in the same namespace.
   * More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.PersistentVolumeClaimVolumeSource persistentVolumeClaim = 10;</code>
   */
  com.appscode.api.kubernetes.v1beta2.PersistentVolumeClaimVolumeSourceOrBuilder getPersistentVolumeClaimOrBuilder();

  /**
   * <pre>
   * RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.RBDVolumeSource rbd = 11;</code>
   */
  boolean hasRbd();
  /**
   * <pre>
   * RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.RBDVolumeSource rbd = 11;</code>
   */
  com.appscode.api.kubernetes.v1beta2.RBDVolumeSource getRbd();
  /**
   * <pre>
   * RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
   * More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.RBDVolumeSource rbd = 11;</code>
   */
  com.appscode.api.kubernetes.v1beta2.RBDVolumeSourceOrBuilder getRbdOrBuilder();

  /**
   * <pre>
   * FlexVolume represents a generic volume resource that is
   * provisioned/attached using an exec based plugin. This is an
   * alpha feature and may change in future.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FlexVolumeSource flexVolume = 12;</code>
   */
  boolean hasFlexVolume();
  /**
   * <pre>
   * FlexVolume represents a generic volume resource that is
   * provisioned/attached using an exec based plugin. This is an
   * alpha feature and may change in future.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FlexVolumeSource flexVolume = 12;</code>
   */
  com.appscode.api.kubernetes.v1beta2.FlexVolumeSource getFlexVolume();
  /**
   * <pre>
   * FlexVolume represents a generic volume resource that is
   * provisioned/attached using an exec based plugin. This is an
   * alpha feature and may change in future.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FlexVolumeSource flexVolume = 12;</code>
   */
  com.appscode.api.kubernetes.v1beta2.FlexVolumeSourceOrBuilder getFlexVolumeOrBuilder();

  /**
   * <pre>
   * Cinder represents a cinder volume attached and mounted on kubelets host machine
   * More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.CinderVolumeSource cinder = 13;</code>
   */
  boolean hasCinder();
  /**
   * <pre>
   * Cinder represents a cinder volume attached and mounted on kubelets host machine
   * More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.CinderVolumeSource cinder = 13;</code>
   */
  com.appscode.api.kubernetes.v1beta2.CinderVolumeSource getCinder();
  /**
   * <pre>
   * Cinder represents a cinder volume attached and mounted on kubelets host machine
   * More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.CinderVolumeSource cinder = 13;</code>
   */
  com.appscode.api.kubernetes.v1beta2.CinderVolumeSourceOrBuilder getCinderOrBuilder();

  /**
   * <pre>
   * CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.CephFSVolumeSource cephfs = 14;</code>
   */
  boolean hasCephfs();
  /**
   * <pre>
   * CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.CephFSVolumeSource cephfs = 14;</code>
   */
  com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource getCephfs();
  /**
   * <pre>
   * CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.CephFSVolumeSource cephfs = 14;</code>
   */
  com.appscode.api.kubernetes.v1beta2.CephFSVolumeSourceOrBuilder getCephfsOrBuilder();

  /**
   * <pre>
   * Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FlockerVolumeSource flocker = 15;</code>
   */
  boolean hasFlocker();
  /**
   * <pre>
   * Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FlockerVolumeSource flocker = 15;</code>
   */
  com.appscode.api.kubernetes.v1beta2.FlockerVolumeSource getFlocker();
  /**
   * <pre>
   * Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FlockerVolumeSource flocker = 15;</code>
   */
  com.appscode.api.kubernetes.v1beta2.FlockerVolumeSourceOrBuilder getFlockerOrBuilder();

  /**
   * <pre>
   * DownwardAPI represents downward API about the pod that should populate this volume
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.DownwardAPIVolumeSource downwardAPI = 16;</code>
   */
  boolean hasDownwardAPI();
  /**
   * <pre>
   * DownwardAPI represents downward API about the pod that should populate this volume
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.DownwardAPIVolumeSource downwardAPI = 16;</code>
   */
  com.appscode.api.kubernetes.v1beta2.DownwardAPIVolumeSource getDownwardAPI();
  /**
   * <pre>
   * DownwardAPI represents downward API about the pod that should populate this volume
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.DownwardAPIVolumeSource downwardAPI = 16;</code>
   */
  com.appscode.api.kubernetes.v1beta2.DownwardAPIVolumeSourceOrBuilder getDownwardAPIOrBuilder();

  /**
   * <pre>
   * FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FCVolumeSource fc = 17;</code>
   */
  boolean hasFc();
  /**
   * <pre>
   * FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FCVolumeSource fc = 17;</code>
   */
  com.appscode.api.kubernetes.v1beta2.FCVolumeSource getFc();
  /**
   * <pre>
   * FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.FCVolumeSource fc = 17;</code>
   */
  com.appscode.api.kubernetes.v1beta2.FCVolumeSourceOrBuilder getFcOrBuilder();

  /**
   * <pre>
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AzureFileVolumeSource azureFile = 18;</code>
   */
  boolean hasAzureFile();
  /**
   * <pre>
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AzureFileVolumeSource azureFile = 18;</code>
   */
  com.appscode.api.kubernetes.v1beta2.AzureFileVolumeSource getAzureFile();
  /**
   * <pre>
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AzureFileVolumeSource azureFile = 18;</code>
   */
  com.appscode.api.kubernetes.v1beta2.AzureFileVolumeSourceOrBuilder getAzureFileOrBuilder();

  /**
   * <pre>
   * ConfigMap represents a configMap that should populate this volume
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ConfigMapVolumeSource configMap = 19;</code>
   */
  boolean hasConfigMap();
  /**
   * <pre>
   * ConfigMap represents a configMap that should populate this volume
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ConfigMapVolumeSource configMap = 19;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource getConfigMap();
  /**
   * <pre>
   * ConfigMap represents a configMap that should populate this volume
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ConfigMapVolumeSource configMap = 19;</code>
   */
  com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSourceOrBuilder getConfigMapOrBuilder();

  /**
   * <pre>
   * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.VsphereVirtualDiskVolumeSource vsphereVolume = 20;</code>
   */
  boolean hasVsphereVolume();
  /**
   * <pre>
   * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.VsphereVirtualDiskVolumeSource vsphereVolume = 20;</code>
   */
  com.appscode.api.kubernetes.v1beta2.VsphereVirtualDiskVolumeSource getVsphereVolume();
  /**
   * <pre>
   * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.VsphereVirtualDiskVolumeSource vsphereVolume = 20;</code>
   */
  com.appscode.api.kubernetes.v1beta2.VsphereVirtualDiskVolumeSourceOrBuilder getVsphereVolumeOrBuilder();

  /**
   * <pre>
   * Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.QuobyteVolumeSource quobyte = 21;</code>
   */
  boolean hasQuobyte();
  /**
   * <pre>
   * Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.QuobyteVolumeSource quobyte = 21;</code>
   */
  com.appscode.api.kubernetes.v1beta2.QuobyteVolumeSource getQuobyte();
  /**
   * <pre>
   * Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.QuobyteVolumeSource quobyte = 21;</code>
   */
  com.appscode.api.kubernetes.v1beta2.QuobyteVolumeSourceOrBuilder getQuobyteOrBuilder();

  /**
   * <pre>
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AzureDiskVolumeSource azureDisk = 22;</code>
   */
  boolean hasAzureDisk();
  /**
   * <pre>
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AzureDiskVolumeSource azureDisk = 22;</code>
   */
  com.appscode.api.kubernetes.v1beta2.AzureDiskVolumeSource getAzureDisk();
  /**
   * <pre>
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.AzureDiskVolumeSource azureDisk = 22;</code>
   */
  com.appscode.api.kubernetes.v1beta2.AzureDiskVolumeSourceOrBuilder getAzureDiskOrBuilder();

  /**
   * <pre>
   * PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.PhotonPersistentDiskVolumeSource photonPersistentDisk = 23;</code>
   */
  boolean hasPhotonPersistentDisk();
  /**
   * <pre>
   * PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.PhotonPersistentDiskVolumeSource photonPersistentDisk = 23;</code>
   */
  com.appscode.api.kubernetes.v1beta2.PhotonPersistentDiskVolumeSource getPhotonPersistentDisk();
  /**
   * <pre>
   * PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.PhotonPersistentDiskVolumeSource photonPersistentDisk = 23;</code>
   */
  com.appscode.api.kubernetes.v1beta2.PhotonPersistentDiskVolumeSourceOrBuilder getPhotonPersistentDiskOrBuilder();
}
