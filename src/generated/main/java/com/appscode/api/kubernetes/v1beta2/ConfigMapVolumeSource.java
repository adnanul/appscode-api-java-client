// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

/**
 * Protobuf type {@code appscode.kubernetes.v1beta2.ConfigMapVolumeSource}
 */
public  final class ConfigMapVolumeSource extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:appscode.kubernetes.v1beta2.ConfigMapVolumeSource)
    ConfigMapVolumeSourceOrBuilder {
  // Use ConfigMapVolumeSource.newBuilder() to construct.
  private ConfigMapVolumeSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConfigMapVolumeSource() {
    defaultMode_ = 0;
    optional_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ConfigMapVolumeSource(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.appscode.api.kubernetes.v1beta2.LocalObjectReference.Builder subBuilder = null;
            if (localObjectReference_ != null) {
              subBuilder = localObjectReference_.toBuilder();
            }
            localObjectReference_ = input.readMessage(com.appscode.api.kubernetes.v1beta2.LocalObjectReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(localObjectReference_);
              localObjectReference_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.appscode.api.kubernetes.v1beta2.KeyToPath.Builder subBuilder = null;
            if (items_ != null) {
              subBuilder = items_.toBuilder();
            }
            items_ = input.readMessage(com.appscode.api.kubernetes.v1beta2.KeyToPath.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(items_);
              items_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            defaultMode_ = input.readInt32();
            break;
          }
          case 32: {

            optional_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_ConfigMapVolumeSource_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_ConfigMapVolumeSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.class, com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.Builder.class);
  }

  public static final int LOCALOBJECTREFERENCE_FIELD_NUMBER = 1;
  private com.appscode.api.kubernetes.v1beta2.LocalObjectReference localObjectReference_;
  /**
   * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
   */
  public boolean hasLocalObjectReference() {
    return localObjectReference_ != null;
  }
  /**
   * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.LocalObjectReference getLocalObjectReference() {
    return localObjectReference_ == null ? com.appscode.api.kubernetes.v1beta2.LocalObjectReference.getDefaultInstance() : localObjectReference_;
  }
  /**
   * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.LocalObjectReferenceOrBuilder getLocalObjectReferenceOrBuilder() {
    return getLocalObjectReference();
  }

  public static final int ITEMS_FIELD_NUMBER = 2;
  private com.appscode.api.kubernetes.v1beta2.KeyToPath items_;
  /**
   * <pre>
   * If unspecified, each key-value pair in the Data field of the referenced
   * ConfigMap will be projected into the volume as a file whose name is the
   * key and content is the value. If specified, the listed keys will be
   * projected into the specified paths, and unlisted keys will not be
   * present. If a key is specified which is not present in the ConfigMap,
   * the volume setup will error unless it is marked optional. Paths must be
   * relative and may not contain the '..' path or start with '..'.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
   */
  public boolean hasItems() {
    return items_ != null;
  }
  /**
   * <pre>
   * If unspecified, each key-value pair in the Data field of the referenced
   * ConfigMap will be projected into the volume as a file whose name is the
   * key and content is the value. If specified, the listed keys will be
   * projected into the specified paths, and unlisted keys will not be
   * present. If a key is specified which is not present in the ConfigMap,
   * the volume setup will error unless it is marked optional. Paths must be
   * relative and may not contain the '..' path or start with '..'.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.KeyToPath getItems() {
    return items_ == null ? com.appscode.api.kubernetes.v1beta2.KeyToPath.getDefaultInstance() : items_;
  }
  /**
   * <pre>
   * If unspecified, each key-value pair in the Data field of the referenced
   * ConfigMap will be projected into the volume as a file whose name is the
   * key and content is the value. If specified, the listed keys will be
   * projected into the specified paths, and unlisted keys will not be
   * present. If a key is specified which is not present in the ConfigMap,
   * the volume setup will error unless it is marked optional. Paths must be
   * relative and may not contain the '..' path or start with '..'.
   * +optional
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.KeyToPathOrBuilder getItemsOrBuilder() {
    return getItems();
  }

  public static final int DEFAULTMODE_FIELD_NUMBER = 3;
  private int defaultMode_;
  /**
   * <pre>
   * Optional: mode bits to use on created files by default. Must be a
   * value between 0 and 0777. Defaults to 0644.
   * Directories within the path are not affected by this setting.
   * This might be in conflict with other options that affect the file
   * mode, like fsGroup, and the result can be other mode bits set.
   * +optional
   * </pre>
   *
   * <code>optional int32 defaultMode = 3;</code>
   */
  public int getDefaultMode() {
    return defaultMode_;
  }

  public static final int OPTIONAL_FIELD_NUMBER = 4;
  private boolean optional_;
  /**
   * <pre>
   * Specify whether the ConfigMap or it's keys must be defined
   * +optional
   * </pre>
   *
   * <code>optional bool optional = 4;</code>
   */
  public boolean getOptional() {
    return optional_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (localObjectReference_ != null) {
      output.writeMessage(1, getLocalObjectReference());
    }
    if (items_ != null) {
      output.writeMessage(2, getItems());
    }
    if (defaultMode_ != 0) {
      output.writeInt32(3, defaultMode_);
    }
    if (optional_ != false) {
      output.writeBool(4, optional_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (localObjectReference_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLocalObjectReference());
    }
    if (items_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getItems());
    }
    if (defaultMode_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, defaultMode_);
    }
    if (optional_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, optional_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource)) {
      return super.equals(obj);
    }
    com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource other = (com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource) obj;

    boolean result = true;
    result = result && (hasLocalObjectReference() == other.hasLocalObjectReference());
    if (hasLocalObjectReference()) {
      result = result && getLocalObjectReference()
          .equals(other.getLocalObjectReference());
    }
    result = result && (hasItems() == other.hasItems());
    if (hasItems()) {
      result = result && getItems()
          .equals(other.getItems());
    }
    result = result && (getDefaultMode()
        == other.getDefaultMode());
    result = result && (getOptional()
        == other.getOptional());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasLocalObjectReference()) {
      hash = (37 * hash) + LOCALOBJECTREFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getLocalObjectReference().hashCode();
    }
    if (hasItems()) {
      hash = (37 * hash) + ITEMS_FIELD_NUMBER;
      hash = (53 * hash) + getItems().hashCode();
    }
    hash = (37 * hash) + DEFAULTMODE_FIELD_NUMBER;
    hash = (53 * hash) + getDefaultMode();
    hash = (37 * hash) + OPTIONAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOptional());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code appscode.kubernetes.v1beta2.ConfigMapVolumeSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:appscode.kubernetes.v1beta2.ConfigMapVolumeSource)
      com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_ConfigMapVolumeSource_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_ConfigMapVolumeSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.class, com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.Builder.class);
    }

    // Construct using com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (localObjectReferenceBuilder_ == null) {
        localObjectReference_ = null;
      } else {
        localObjectReference_ = null;
        localObjectReferenceBuilder_ = null;
      }
      if (itemsBuilder_ == null) {
        items_ = null;
      } else {
        items_ = null;
        itemsBuilder_ = null;
      }
      defaultMode_ = 0;

      optional_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_ConfigMapVolumeSource_descriptor;
    }

    public com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource getDefaultInstanceForType() {
      return com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.getDefaultInstance();
    }

    public com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource build() {
      com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource buildPartial() {
      com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource result = new com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource(this);
      if (localObjectReferenceBuilder_ == null) {
        result.localObjectReference_ = localObjectReference_;
      } else {
        result.localObjectReference_ = localObjectReferenceBuilder_.build();
      }
      if (itemsBuilder_ == null) {
        result.items_ = items_;
      } else {
        result.items_ = itemsBuilder_.build();
      }
      result.defaultMode_ = defaultMode_;
      result.optional_ = optional_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource) {
        return mergeFrom((com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource other) {
      if (other == com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource.getDefaultInstance()) return this;
      if (other.hasLocalObjectReference()) {
        mergeLocalObjectReference(other.getLocalObjectReference());
      }
      if (other.hasItems()) {
        mergeItems(other.getItems());
      }
      if (other.getDefaultMode() != 0) {
        setDefaultMode(other.getDefaultMode());
      }
      if (other.getOptional() != false) {
        setOptional(other.getOptional());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.appscode.api.kubernetes.v1beta2.LocalObjectReference localObjectReference_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.LocalObjectReference, com.appscode.api.kubernetes.v1beta2.LocalObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.LocalObjectReferenceOrBuilder> localObjectReferenceBuilder_;
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public boolean hasLocalObjectReference() {
      return localObjectReferenceBuilder_ != null || localObjectReference_ != null;
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.LocalObjectReference getLocalObjectReference() {
      if (localObjectReferenceBuilder_ == null) {
        return localObjectReference_ == null ? com.appscode.api.kubernetes.v1beta2.LocalObjectReference.getDefaultInstance() : localObjectReference_;
      } else {
        return localObjectReferenceBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public Builder setLocalObjectReference(com.appscode.api.kubernetes.v1beta2.LocalObjectReference value) {
      if (localObjectReferenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        localObjectReference_ = value;
        onChanged();
      } else {
        localObjectReferenceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public Builder setLocalObjectReference(
        com.appscode.api.kubernetes.v1beta2.LocalObjectReference.Builder builderForValue) {
      if (localObjectReferenceBuilder_ == null) {
        localObjectReference_ = builderForValue.build();
        onChanged();
      } else {
        localObjectReferenceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public Builder mergeLocalObjectReference(com.appscode.api.kubernetes.v1beta2.LocalObjectReference value) {
      if (localObjectReferenceBuilder_ == null) {
        if (localObjectReference_ != null) {
          localObjectReference_ =
            com.appscode.api.kubernetes.v1beta2.LocalObjectReference.newBuilder(localObjectReference_).mergeFrom(value).buildPartial();
        } else {
          localObjectReference_ = value;
        }
        onChanged();
      } else {
        localObjectReferenceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public Builder clearLocalObjectReference() {
      if (localObjectReferenceBuilder_ == null) {
        localObjectReference_ = null;
        onChanged();
      } else {
        localObjectReference_ = null;
        localObjectReferenceBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.LocalObjectReference.Builder getLocalObjectReferenceBuilder() {
      
      onChanged();
      return getLocalObjectReferenceFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.LocalObjectReferenceOrBuilder getLocalObjectReferenceOrBuilder() {
      if (localObjectReferenceBuilder_ != null) {
        return localObjectReferenceBuilder_.getMessageOrBuilder();
      } else {
        return localObjectReference_ == null ?
            com.appscode.api.kubernetes.v1beta2.LocalObjectReference.getDefaultInstance() : localObjectReference_;
      }
    }
    /**
     * <code>optional .appscode.kubernetes.v1beta2.LocalObjectReference localObjectReference = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.LocalObjectReference, com.appscode.api.kubernetes.v1beta2.LocalObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.LocalObjectReferenceOrBuilder> 
        getLocalObjectReferenceFieldBuilder() {
      if (localObjectReferenceBuilder_ == null) {
        localObjectReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.appscode.api.kubernetes.v1beta2.LocalObjectReference, com.appscode.api.kubernetes.v1beta2.LocalObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.LocalObjectReferenceOrBuilder>(
                getLocalObjectReference(),
                getParentForChildren(),
                isClean());
        localObjectReference_ = null;
      }
      return localObjectReferenceBuilder_;
    }

    private com.appscode.api.kubernetes.v1beta2.KeyToPath items_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.KeyToPath, com.appscode.api.kubernetes.v1beta2.KeyToPath.Builder, com.appscode.api.kubernetes.v1beta2.KeyToPathOrBuilder> itemsBuilder_;
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public boolean hasItems() {
      return itemsBuilder_ != null || items_ != null;
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.KeyToPath getItems() {
      if (itemsBuilder_ == null) {
        return items_ == null ? com.appscode.api.kubernetes.v1beta2.KeyToPath.getDefaultInstance() : items_;
      } else {
        return itemsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public Builder setItems(com.appscode.api.kubernetes.v1beta2.KeyToPath value) {
      if (itemsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        items_ = value;
        onChanged();
      } else {
        itemsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public Builder setItems(
        com.appscode.api.kubernetes.v1beta2.KeyToPath.Builder builderForValue) {
      if (itemsBuilder_ == null) {
        items_ = builderForValue.build();
        onChanged();
      } else {
        itemsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public Builder mergeItems(com.appscode.api.kubernetes.v1beta2.KeyToPath value) {
      if (itemsBuilder_ == null) {
        if (items_ != null) {
          items_ =
            com.appscode.api.kubernetes.v1beta2.KeyToPath.newBuilder(items_).mergeFrom(value).buildPartial();
        } else {
          items_ = value;
        }
        onChanged();
      } else {
        itemsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public Builder clearItems() {
      if (itemsBuilder_ == null) {
        items_ = null;
        onChanged();
      } else {
        items_ = null;
        itemsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.KeyToPath.Builder getItemsBuilder() {
      
      onChanged();
      return getItemsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.KeyToPathOrBuilder getItemsOrBuilder() {
      if (itemsBuilder_ != null) {
        return itemsBuilder_.getMessageOrBuilder();
      } else {
        return items_ == null ?
            com.appscode.api.kubernetes.v1beta2.KeyToPath.getDefaultInstance() : items_;
      }
    }
    /**
     * <pre>
     * If unspecified, each key-value pair in the Data field of the referenced
     * ConfigMap will be projected into the volume as a file whose name is the
     * key and content is the value. If specified, the listed keys will be
     * projected into the specified paths, and unlisted keys will not be
     * present. If a key is specified which is not present in the ConfigMap,
     * the volume setup will error unless it is marked optional. Paths must be
     * relative and may not contain the '..' path or start with '..'.
     * +optional
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.KeyToPath items = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.KeyToPath, com.appscode.api.kubernetes.v1beta2.KeyToPath.Builder, com.appscode.api.kubernetes.v1beta2.KeyToPathOrBuilder> 
        getItemsFieldBuilder() {
      if (itemsBuilder_ == null) {
        itemsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.appscode.api.kubernetes.v1beta2.KeyToPath, com.appscode.api.kubernetes.v1beta2.KeyToPath.Builder, com.appscode.api.kubernetes.v1beta2.KeyToPathOrBuilder>(
                getItems(),
                getParentForChildren(),
                isClean());
        items_ = null;
      }
      return itemsBuilder_;
    }

    private int defaultMode_ ;
    /**
     * <pre>
     * Optional: mode bits to use on created files by default. Must be a
     * value between 0 and 0777. Defaults to 0644.
     * Directories within the path are not affected by this setting.
     * This might be in conflict with other options that affect the file
     * mode, like fsGroup, and the result can be other mode bits set.
     * +optional
     * </pre>
     *
     * <code>optional int32 defaultMode = 3;</code>
     */
    public int getDefaultMode() {
      return defaultMode_;
    }
    /**
     * <pre>
     * Optional: mode bits to use on created files by default. Must be a
     * value between 0 and 0777. Defaults to 0644.
     * Directories within the path are not affected by this setting.
     * This might be in conflict with other options that affect the file
     * mode, like fsGroup, and the result can be other mode bits set.
     * +optional
     * </pre>
     *
     * <code>optional int32 defaultMode = 3;</code>
     */
    public Builder setDefaultMode(int value) {
      
      defaultMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: mode bits to use on created files by default. Must be a
     * value between 0 and 0777. Defaults to 0644.
     * Directories within the path are not affected by this setting.
     * This might be in conflict with other options that affect the file
     * mode, like fsGroup, and the result can be other mode bits set.
     * +optional
     * </pre>
     *
     * <code>optional int32 defaultMode = 3;</code>
     */
    public Builder clearDefaultMode() {
      
      defaultMode_ = 0;
      onChanged();
      return this;
    }

    private boolean optional_ ;
    /**
     * <pre>
     * Specify whether the ConfigMap or it's keys must be defined
     * +optional
     * </pre>
     *
     * <code>optional bool optional = 4;</code>
     */
    public boolean getOptional() {
      return optional_;
    }
    /**
     * <pre>
     * Specify whether the ConfigMap or it's keys must be defined
     * +optional
     * </pre>
     *
     * <code>optional bool optional = 4;</code>
     */
    public Builder setOptional(boolean value) {
      
      optional_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify whether the ConfigMap or it's keys must be defined
     * +optional
     * </pre>
     *
     * <code>optional bool optional = 4;</code>
     */
    public Builder clearOptional() {
      
      optional_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:appscode.kubernetes.v1beta2.ConfigMapVolumeSource)
  }

  // @@protoc_insertion_point(class_scope:appscode.kubernetes.v1beta2.ConfigMapVolumeSource)
  private static final com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource();
  }

  public static com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConfigMapVolumeSource>
      PARSER = new com.google.protobuf.AbstractParser<ConfigMapVolumeSource>() {
    public ConfigMapVolumeSource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigMapVolumeSource(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConfigMapVolumeSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConfigMapVolumeSource> getParserForType() {
    return PARSER;
  }

  public com.appscode.api.kubernetes.v1beta2.ConfigMapVolumeSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

