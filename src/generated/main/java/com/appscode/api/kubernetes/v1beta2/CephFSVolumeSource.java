// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

/**
 * <pre>
 * Represents a Ceph Filesystem mount that lasts the lifetime of a pod
 * Cephfs volumes do not support ownership management or SELinux relabeling.
 * </pre>
 *
 * Protobuf type {@code appscode.kubernetes.v1beta2.CephFSVolumeSource}
 */
public  final class CephFSVolumeSource extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:appscode.kubernetes.v1beta2.CephFSVolumeSource)
    CephFSVolumeSourceOrBuilder {
  // Use CephFSVolumeSource.newBuilder() to construct.
  private CephFSVolumeSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CephFSVolumeSource() {
    monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    path_ = "";
    user_ = "";
    secretFile_ = "";
    readOnly_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private CephFSVolumeSource(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              monitors_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            monitors_.add(s);
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            path_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            user_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            secretFile_ = s;
            break;
          }
          case 42: {
            com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder subBuilder = null;
            if (secretRef_ != null) {
              subBuilder = secretRef_.toBuilder();
            }
            secretRef_ = input.readMessage(com.appscode.api.kubernetes.v1beta2.ObjectReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(secretRef_);
              secretRef_ = subBuilder.buildPartial();
            }

            break;
          }
          case 48: {

            readOnly_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        monitors_ = monitors_.getUnmodifiableView();
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_CephFSVolumeSource_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_CephFSVolumeSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.class, com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.Builder.class);
  }

  private int bitField0_;
  public static final int MONITORS_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList monitors_;
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getMonitorsList() {
    return monitors_;
  }
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public int getMonitorsCount() {
    return monitors_.size();
  }
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public java.lang.String getMonitors(int index) {
    return monitors_.get(index);
  }
  /**
   * <pre>
   * Required: Monitors is a collection of Ceph monitors
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public com.google.protobuf.ByteString
      getMonitorsBytes(int index) {
    return monitors_.getByteString(index);
  }

  public static final int PATH_FIELD_NUMBER = 2;
  private volatile java.lang.Object path_;
  /**
   * <pre>
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   * </pre>
   *
   * <code>string path = 2;</code>
   */
  public java.lang.String getPath() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   * </pre>
   *
   * <code>string path = 2;</code>
   */
  public com.google.protobuf.ByteString
      getPathBytes() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_FIELD_NUMBER = 3;
  private volatile java.lang.Object user_;
  /**
   * <pre>
   * Optional: User is the rados user name, default is admin
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string user = 3;</code>
   */
  public java.lang.String getUser() {
    java.lang.Object ref = user_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      user_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: User is the rados user name, default is admin
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string user = 3;</code>
   */
  public com.google.protobuf.ByteString
      getUserBytes() {
    java.lang.Object ref = user_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      user_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECRETFILE_FIELD_NUMBER = 4;
  private volatile java.lang.Object secretFile_;
  /**
   * <pre>
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string secretFile = 4;</code>
   */
  public java.lang.String getSecretFile() {
    java.lang.Object ref = secretFile_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      secretFile_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>string secretFile = 4;</code>
   */
  public com.google.protobuf.ByteString
      getSecretFileBytes() {
    java.lang.Object ref = secretFile_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      secretFile_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECRETREF_FIELD_NUMBER = 5;
  private com.appscode.api.kubernetes.v1beta2.ObjectReference secretRef_;
  /**
   * <pre>
   * Optional: SecretRef is reference to the authentication secret for User, default is empty.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
   */
  public boolean hasSecretRef() {
    return secretRef_ != null;
  }
  /**
   * <pre>
   * Optional: SecretRef is reference to the authentication secret for User, default is empty.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef() {
    return secretRef_ == null ? com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
  }
  /**
   * <pre>
   * Optional: SecretRef is reference to the authentication secret for User, default is empty.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder() {
    return getSecretRef();
  }

  public static final int READONLY_FIELD_NUMBER = 6;
  private boolean readOnly_;
  /**
   * <pre>
   * Optional: Defaults to false (read/write). ReadOnly here will force
   * the ReadOnly setting in VolumeMounts.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
   * </pre>
   *
   * <code>bool readOnly = 6;</code>
   */
  public boolean getReadOnly() {
    return readOnly_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < monitors_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, monitors_.getRaw(i));
    }
    if (!getPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
    }
    if (!getUserBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, user_);
    }
    if (!getSecretFileBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, secretFile_);
    }
    if (secretRef_ != null) {
      output.writeMessage(5, getSecretRef());
    }
    if (readOnly_ != false) {
      output.writeBool(6, readOnly_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < monitors_.size(); i++) {
        dataSize += computeStringSizeNoTag(monitors_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getMonitorsList().size();
    }
    if (!getPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
    }
    if (!getUserBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, user_);
    }
    if (!getSecretFileBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, secretFile_);
    }
    if (secretRef_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSecretRef());
    }
    if (readOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, readOnly_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource)) {
      return super.equals(obj);
    }
    com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource other = (com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource) obj;

    boolean result = true;
    result = result && getMonitorsList()
        .equals(other.getMonitorsList());
    result = result && getPath()
        .equals(other.getPath());
    result = result && getUser()
        .equals(other.getUser());
    result = result && getSecretFile()
        .equals(other.getSecretFile());
    result = result && (hasSecretRef() == other.hasSecretRef());
    if (hasSecretRef()) {
      result = result && getSecretRef()
          .equals(other.getSecretRef());
    }
    result = result && (getReadOnly()
        == other.getReadOnly());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMonitorsCount() > 0) {
      hash = (37 * hash) + MONITORS_FIELD_NUMBER;
      hash = (53 * hash) + getMonitorsList().hashCode();
    }
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    hash = (37 * hash) + USER_FIELD_NUMBER;
    hash = (53 * hash) + getUser().hashCode();
    hash = (37 * hash) + SECRETFILE_FIELD_NUMBER;
    hash = (53 * hash) + getSecretFile().hashCode();
    if (hasSecretRef()) {
      hash = (37 * hash) + SECRETREF_FIELD_NUMBER;
      hash = (53 * hash) + getSecretRef().hashCode();
    }
    hash = (37 * hash) + READONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReadOnly());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod
   * Cephfs volumes do not support ownership management or SELinux relabeling.
   * </pre>
   *
   * Protobuf type {@code appscode.kubernetes.v1beta2.CephFSVolumeSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:appscode.kubernetes.v1beta2.CephFSVolumeSource)
      com.appscode.api.kubernetes.v1beta2.CephFSVolumeSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_CephFSVolumeSource_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_CephFSVolumeSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.class, com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.Builder.class);
    }

    // Construct using com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      path_ = "";

      user_ = "";

      secretFile_ = "";

      if (secretRefBuilder_ == null) {
        secretRef_ = null;
      } else {
        secretRef_ = null;
        secretRefBuilder_ = null;
      }
      readOnly_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_CephFSVolumeSource_descriptor;
    }

    public com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource getDefaultInstanceForType() {
      return com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.getDefaultInstance();
    }

    public com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource build() {
      com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource buildPartial() {
      com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource result = new com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        monitors_ = monitors_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.monitors_ = monitors_;
      result.path_ = path_;
      result.user_ = user_;
      result.secretFile_ = secretFile_;
      if (secretRefBuilder_ == null) {
        result.secretRef_ = secretRef_;
      } else {
        result.secretRef_ = secretRefBuilder_.build();
      }
      result.readOnly_ = readOnly_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource) {
        return mergeFrom((com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource other) {
      if (other == com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource.getDefaultInstance()) return this;
      if (!other.monitors_.isEmpty()) {
        if (monitors_.isEmpty()) {
          monitors_ = other.monitors_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureMonitorsIsMutable();
          monitors_.addAll(other.monitors_);
        }
        onChanged();
      }
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        onChanged();
      }
      if (!other.getUser().isEmpty()) {
        user_ = other.user_;
        onChanged();
      }
      if (!other.getSecretFile().isEmpty()) {
        secretFile_ = other.secretFile_;
        onChanged();
      }
      if (other.hasSecretRef()) {
        mergeSecretRef(other.getSecretRef());
      }
      if (other.getReadOnly() != false) {
        setReadOnly(other.getReadOnly());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureMonitorsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        monitors_ = new com.google.protobuf.LazyStringArrayList(monitors_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getMonitorsList() {
      return monitors_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public int getMonitorsCount() {
      return monitors_.size();
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public java.lang.String getMonitors(int index) {
      return monitors_.get(index);
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMonitorsBytes(int index) {
      return monitors_.getByteString(index);
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder setMonitors(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorsIsMutable();
      monitors_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder addMonitors(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorsIsMutable();
      monitors_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder addAllMonitors(
        java.lang.Iterable<java.lang.String> values) {
      ensureMonitorsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, monitors_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder clearMonitors() {
      monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required: Monitors is a collection of Ceph monitors
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder addMonitorsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureMonitorsIsMutable();
      monitors_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object path_ = "";
    /**
     * <pre>
     * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public Builder setPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      path_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public Builder clearPath() {
      
      path_ = getDefaultInstance().getPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      path_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object user_ = "";
    /**
     * <pre>
     * Optional: User is the rados user name, default is admin
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string user = 3;</code>
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: User is the rados user name, default is admin
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string user = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: User is the rados user name, default is admin
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string user = 3;</code>
     */
    public Builder setUser(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      user_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: User is the rados user name, default is admin
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string user = 3;</code>
     */
    public Builder clearUser() {
      
      user_ = getDefaultInstance().getUser();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: User is the rados user name, default is admin
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string user = 3;</code>
     */
    public Builder setUserBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      user_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object secretFile_ = "";
    /**
     * <pre>
     * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string secretFile = 4;</code>
     */
    public java.lang.String getSecretFile() {
      java.lang.Object ref = secretFile_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        secretFile_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string secretFile = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSecretFileBytes() {
      java.lang.Object ref = secretFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secretFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string secretFile = 4;</code>
     */
    public Builder setSecretFile(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      secretFile_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string secretFile = 4;</code>
     */
    public Builder clearSecretFile() {
      
      secretFile_ = getDefaultInstance().getSecretFile();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>string secretFile = 4;</code>
     */
    public Builder setSecretFileBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      secretFile_ = value;
      onChanged();
      return this;
    }

    private com.appscode.api.kubernetes.v1beta2.ObjectReference secretRef_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder> secretRefBuilder_;
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public boolean hasSecretRef() {
      return secretRefBuilder_ != null || secretRef_ != null;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef() {
      if (secretRefBuilder_ == null) {
        return secretRef_ == null ? com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
      } else {
        return secretRefBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public Builder setSecretRef(com.appscode.api.kubernetes.v1beta2.ObjectReference value) {
      if (secretRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        secretRef_ = value;
        onChanged();
      } else {
        secretRefBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public Builder setSecretRef(
        com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder builderForValue) {
      if (secretRefBuilder_ == null) {
        secretRef_ = builderForValue.build();
        onChanged();
      } else {
        secretRefBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public Builder mergeSecretRef(com.appscode.api.kubernetes.v1beta2.ObjectReference value) {
      if (secretRefBuilder_ == null) {
        if (secretRef_ != null) {
          secretRef_ =
            com.appscode.api.kubernetes.v1beta2.ObjectReference.newBuilder(secretRef_).mergeFrom(value).buildPartial();
        } else {
          secretRef_ = value;
        }
        onChanged();
      } else {
        secretRefBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public Builder clearSecretRef() {
      if (secretRefBuilder_ == null) {
        secretRef_ = null;
        onChanged();
      } else {
        secretRef_ = null;
        secretRefBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder getSecretRefBuilder() {
      
      onChanged();
      return getSecretRefFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder() {
      if (secretRefBuilder_ != null) {
        return secretRefBuilder_.getMessageOrBuilder();
      } else {
        return secretRef_ == null ?
            com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
      }
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the authentication secret for User, default is empty.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder> 
        getSecretRefFieldBuilder() {
      if (secretRefBuilder_ == null) {
        secretRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder>(
                getSecretRef(),
                getParentForChildren(),
                isClean());
        secretRef_ = null;
      }
      return secretRefBuilder_;
    }

    private boolean readOnly_ ;
    /**
     * <pre>
     * Optional: Defaults to false (read/write). ReadOnly here will force
     * the ReadOnly setting in VolumeMounts.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>bool readOnly = 6;</code>
     */
    public boolean getReadOnly() {
      return readOnly_;
    }
    /**
     * <pre>
     * Optional: Defaults to false (read/write). ReadOnly here will force
     * the ReadOnly setting in VolumeMounts.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>bool readOnly = 6;</code>
     */
    public Builder setReadOnly(boolean value) {
      
      readOnly_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Defaults to false (read/write). ReadOnly here will force
     * the ReadOnly setting in VolumeMounts.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/cephfs/README.md#how-to-use-it
     * </pre>
     *
     * <code>bool readOnly = 6;</code>
     */
    public Builder clearReadOnly() {
      
      readOnly_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:appscode.kubernetes.v1beta2.CephFSVolumeSource)
  }

  // @@protoc_insertion_point(class_scope:appscode.kubernetes.v1beta2.CephFSVolumeSource)
  private static final com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource();
  }

  public static com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CephFSVolumeSource>
      PARSER = new com.google.protobuf.AbstractParser<CephFSVolumeSource>() {
    public CephFSVolumeSource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new CephFSVolumeSource(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CephFSVolumeSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CephFSVolumeSource> getParserForType() {
    return PARSER;
  }

  public com.appscode.api.kubernetes.v1beta2.CephFSVolumeSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

