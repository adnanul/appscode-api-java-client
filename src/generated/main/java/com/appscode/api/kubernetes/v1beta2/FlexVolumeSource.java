// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

/**
 * <pre>
 * FlexVolume represents a generic volume resource that is
 * provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.
 * </pre>
 *
 * Protobuf type {@code appscode.kubernetes.v1beta2.FlexVolumeSource}
 */
public  final class FlexVolumeSource extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:appscode.kubernetes.v1beta2.FlexVolumeSource)
    FlexVolumeSourceOrBuilder {
  // Use FlexVolumeSource.newBuilder() to construct.
  private FlexVolumeSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlexVolumeSource() {
    driver_ = "";
    fsType_ = "";
    readOnly_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private FlexVolumeSource(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            driver_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            fsType_ = s;
            break;
          }
          case 26: {
            com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder subBuilder = null;
            if (secretRef_ != null) {
              subBuilder = secretRef_.toBuilder();
            }
            secretRef_ = input.readMessage(com.appscode.api.kubernetes.v1beta2.ObjectReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(secretRef_);
              secretRef_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            readOnly_ = input.readBool();
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              options_ = com.google.protobuf.MapField.newMapField(
                  OptionsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            options__ = input.readMessage(
                OptionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            options_.getMutableMap().put(
                options__.getKey(), options__.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_FlexVolumeSource_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetOptions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_FlexVolumeSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.class, com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.Builder.class);
  }

  private int bitField0_;
  public static final int DRIVER_FIELD_NUMBER = 1;
  private volatile java.lang.Object driver_;
  /**
   * <pre>
   * Driver is the name of the driver to use for this volume.
   * </pre>
   *
   * <code>string driver = 1;</code>
   */
  public java.lang.String getDriver() {
    java.lang.Object ref = driver_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      driver_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Driver is the name of the driver to use for this volume.
   * </pre>
   *
   * <code>string driver = 1;</code>
   */
  public com.google.protobuf.ByteString
      getDriverBytes() {
    java.lang.Object ref = driver_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      driver_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FSTYPE_FIELD_NUMBER = 2;
  private volatile java.lang.Object fsType_;
  /**
   * <pre>
   * Filesystem type to mount.
   * Must be a filesystem type supported by the host operating system.
   * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   * </pre>
   *
   * <code>string fsType = 2;</code>
   */
  public java.lang.String getFsType() {
    java.lang.Object ref = fsType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fsType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Filesystem type to mount.
   * Must be a filesystem type supported by the host operating system.
   * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   * </pre>
   *
   * <code>string fsType = 2;</code>
   */
  public com.google.protobuf.ByteString
      getFsTypeBytes() {
    java.lang.Object ref = fsType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fsType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECRETREF_FIELD_NUMBER = 3;
  private com.appscode.api.kubernetes.v1beta2.ObjectReference secretRef_;
  /**
   * <pre>
   * Optional: SecretRef is reference to the secret object containing
   * sensitive information to pass to the plugin scripts. This may be
   * empty if no secret object is specified. If the secret object
   * contains more than one secret, all secrets are passed to the plugin
   * scripts.
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
   */
  public boolean hasSecretRef() {
    return secretRef_ != null;
  }
  /**
   * <pre>
   * Optional: SecretRef is reference to the secret object containing
   * sensitive information to pass to the plugin scripts. This may be
   * empty if no secret object is specified. If the secret object
   * contains more than one secret, all secrets are passed to the plugin
   * scripts.
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef() {
    return secretRef_ == null ? com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
  }
  /**
   * <pre>
   * Optional: SecretRef is reference to the secret object containing
   * sensitive information to pass to the plugin scripts. This may be
   * empty if no secret object is specified. If the secret object
   * contains more than one secret, all secrets are passed to the plugin
   * scripts.
   * </pre>
   *
   * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder() {
    return getSecretRef();
  }

  public static final int READONLY_FIELD_NUMBER = 4;
  private boolean readOnly_;
  /**
   * <pre>
   * Optional: Defaults to false (read/write). ReadOnly here will force
   * the ReadOnly setting in VolumeMounts.
   * </pre>
   *
   * <code>bool readOnly = 4;</code>
   */
  public boolean getReadOnly() {
    return readOnly_;
  }

  public static final int OPTIONS_FIELD_NUMBER = 5;
  private static final class OptionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_FlexVolumeSource_OptionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> options_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetOptions() {
    if (options_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OptionsDefaultEntryHolder.defaultEntry);
    }
    return options_;
  }

  public int getOptionsCount() {
    return internalGetOptions().getMap().size();
  }
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */

  public boolean containsOptions(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetOptions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOptionsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getOptions() {
    return getOptionsMap();
  }
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
    return internalGetOptions().getMap();
  }
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */

  public java.lang.String getOptionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetOptions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Optional: Extra command options if any.
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 5;</code>
   */

  public java.lang.String getOptionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetOptions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDriverBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, driver_);
    }
    if (!getFsTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fsType_);
    }
    if (secretRef_ != null) {
      output.writeMessage(3, getSecretRef());
    }
    if (readOnly_ != false) {
      output.writeBool(4, readOnly_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetOptions(),
        OptionsDefaultEntryHolder.defaultEntry,
        5);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDriverBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, driver_);
    }
    if (!getFsTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fsType_);
    }
    if (secretRef_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSecretRef());
    }
    if (readOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, readOnly_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetOptions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      options__ = OptionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, options__);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.appscode.api.kubernetes.v1beta2.FlexVolumeSource)) {
      return super.equals(obj);
    }
    com.appscode.api.kubernetes.v1beta2.FlexVolumeSource other = (com.appscode.api.kubernetes.v1beta2.FlexVolumeSource) obj;

    boolean result = true;
    result = result && getDriver()
        .equals(other.getDriver());
    result = result && getFsType()
        .equals(other.getFsType());
    result = result && (hasSecretRef() == other.hasSecretRef());
    if (hasSecretRef()) {
      result = result && getSecretRef()
          .equals(other.getSecretRef());
    }
    result = result && (getReadOnly()
        == other.getReadOnly());
    result = result && internalGetOptions().equals(
        other.internalGetOptions());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DRIVER_FIELD_NUMBER;
    hash = (53 * hash) + getDriver().hashCode();
    hash = (37 * hash) + FSTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getFsType().hashCode();
    if (hasSecretRef()) {
      hash = (37 * hash) + SECRETREF_FIELD_NUMBER;
      hash = (53 * hash) + getSecretRef().hashCode();
    }
    hash = (37 * hash) + READONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReadOnly());
    if (!internalGetOptions().getMap().isEmpty()) {
      hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOptions().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.appscode.api.kubernetes.v1beta2.FlexVolumeSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * FlexVolume represents a generic volume resource that is
   * provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.
   * </pre>
   *
   * Protobuf type {@code appscode.kubernetes.v1beta2.FlexVolumeSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:appscode.kubernetes.v1beta2.FlexVolumeSource)
      com.appscode.api.kubernetes.v1beta2.FlexVolumeSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_FlexVolumeSource_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_FlexVolumeSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.class, com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.Builder.class);
    }

    // Construct using com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      driver_ = "";

      fsType_ = "";

      if (secretRefBuilder_ == null) {
        secretRef_ = null;
      } else {
        secretRef_ = null;
        secretRefBuilder_ = null;
      }
      readOnly_ = false;

      internalGetMutableOptions().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_FlexVolumeSource_descriptor;
    }

    public com.appscode.api.kubernetes.v1beta2.FlexVolumeSource getDefaultInstanceForType() {
      return com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.getDefaultInstance();
    }

    public com.appscode.api.kubernetes.v1beta2.FlexVolumeSource build() {
      com.appscode.api.kubernetes.v1beta2.FlexVolumeSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.appscode.api.kubernetes.v1beta2.FlexVolumeSource buildPartial() {
      com.appscode.api.kubernetes.v1beta2.FlexVolumeSource result = new com.appscode.api.kubernetes.v1beta2.FlexVolumeSource(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.driver_ = driver_;
      result.fsType_ = fsType_;
      if (secretRefBuilder_ == null) {
        result.secretRef_ = secretRef_;
      } else {
        result.secretRef_ = secretRefBuilder_.build();
      }
      result.readOnly_ = readOnly_;
      result.options_ = internalGetOptions();
      result.options_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.appscode.api.kubernetes.v1beta2.FlexVolumeSource) {
        return mergeFrom((com.appscode.api.kubernetes.v1beta2.FlexVolumeSource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.appscode.api.kubernetes.v1beta2.FlexVolumeSource other) {
      if (other == com.appscode.api.kubernetes.v1beta2.FlexVolumeSource.getDefaultInstance()) return this;
      if (!other.getDriver().isEmpty()) {
        driver_ = other.driver_;
        onChanged();
      }
      if (!other.getFsType().isEmpty()) {
        fsType_ = other.fsType_;
        onChanged();
      }
      if (other.hasSecretRef()) {
        mergeSecretRef(other.getSecretRef());
      }
      if (other.getReadOnly() != false) {
        setReadOnly(other.getReadOnly());
      }
      internalGetMutableOptions().mergeFrom(
          other.internalGetOptions());
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.appscode.api.kubernetes.v1beta2.FlexVolumeSource parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.appscode.api.kubernetes.v1beta2.FlexVolumeSource) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object driver_ = "";
    /**
     * <pre>
     * Driver is the name of the driver to use for this volume.
     * </pre>
     *
     * <code>string driver = 1;</code>
     */
    public java.lang.String getDriver() {
      java.lang.Object ref = driver_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        driver_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Driver is the name of the driver to use for this volume.
     * </pre>
     *
     * <code>string driver = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDriverBytes() {
      java.lang.Object ref = driver_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        driver_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Driver is the name of the driver to use for this volume.
     * </pre>
     *
     * <code>string driver = 1;</code>
     */
    public Builder setDriver(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      driver_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Driver is the name of the driver to use for this volume.
     * </pre>
     *
     * <code>string driver = 1;</code>
     */
    public Builder clearDriver() {
      
      driver_ = getDefaultInstance().getDriver();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Driver is the name of the driver to use for this volume.
     * </pre>
     *
     * <code>string driver = 1;</code>
     */
    public Builder setDriverBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      driver_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fsType_ = "";
    /**
     * <pre>
     * Filesystem type to mount.
     * Must be a filesystem type supported by the host operating system.
     * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
     * </pre>
     *
     * <code>string fsType = 2;</code>
     */
    public java.lang.String getFsType() {
      java.lang.Object ref = fsType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fsType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Filesystem type to mount.
     * Must be a filesystem type supported by the host operating system.
     * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
     * </pre>
     *
     * <code>string fsType = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFsTypeBytes() {
      java.lang.Object ref = fsType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fsType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Filesystem type to mount.
     * Must be a filesystem type supported by the host operating system.
     * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
     * </pre>
     *
     * <code>string fsType = 2;</code>
     */
    public Builder setFsType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fsType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filesystem type to mount.
     * Must be a filesystem type supported by the host operating system.
     * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
     * </pre>
     *
     * <code>string fsType = 2;</code>
     */
    public Builder clearFsType() {
      
      fsType_ = getDefaultInstance().getFsType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filesystem type to mount.
     * Must be a filesystem type supported by the host operating system.
     * Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
     * </pre>
     *
     * <code>string fsType = 2;</code>
     */
    public Builder setFsTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fsType_ = value;
      onChanged();
      return this;
    }

    private com.appscode.api.kubernetes.v1beta2.ObjectReference secretRef_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder> secretRefBuilder_;
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public boolean hasSecretRef() {
      return secretRefBuilder_ != null || secretRef_ != null;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef() {
      if (secretRefBuilder_ == null) {
        return secretRef_ == null ? com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
      } else {
        return secretRefBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public Builder setSecretRef(com.appscode.api.kubernetes.v1beta2.ObjectReference value) {
      if (secretRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        secretRef_ = value;
        onChanged();
      } else {
        secretRefBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public Builder setSecretRef(
        com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder builderForValue) {
      if (secretRefBuilder_ == null) {
        secretRef_ = builderForValue.build();
        onChanged();
      } else {
        secretRefBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public Builder mergeSecretRef(com.appscode.api.kubernetes.v1beta2.ObjectReference value) {
      if (secretRefBuilder_ == null) {
        if (secretRef_ != null) {
          secretRef_ =
            com.appscode.api.kubernetes.v1beta2.ObjectReference.newBuilder(secretRef_).mergeFrom(value).buildPartial();
        } else {
          secretRef_ = value;
        }
        onChanged();
      } else {
        secretRefBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public Builder clearSecretRef() {
      if (secretRefBuilder_ == null) {
        secretRef_ = null;
        onChanged();
      } else {
        secretRef_ = null;
        secretRefBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder getSecretRefBuilder() {
      
      onChanged();
      return getSecretRefFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder() {
      if (secretRefBuilder_ != null) {
        return secretRefBuilder_.getMessageOrBuilder();
      } else {
        return secretRef_ == null ?
            com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
      }
    }
    /**
     * <pre>
     * Optional: SecretRef is reference to the secret object containing
     * sensitive information to pass to the plugin scripts. This may be
     * empty if no secret object is specified. If the secret object
     * contains more than one secret, all secrets are passed to the plugin
     * scripts.
     * </pre>
     *
     * <code>.appscode.kubernetes.v1beta2.ObjectReference secretRef = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder> 
        getSecretRefFieldBuilder() {
      if (secretRefBuilder_ == null) {
        secretRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder>(
                getSecretRef(),
                getParentForChildren(),
                isClean());
        secretRef_ = null;
      }
      return secretRefBuilder_;
    }

    private boolean readOnly_ ;
    /**
     * <pre>
     * Optional: Defaults to false (read/write). ReadOnly here will force
     * the ReadOnly setting in VolumeMounts.
     * </pre>
     *
     * <code>bool readOnly = 4;</code>
     */
    public boolean getReadOnly() {
      return readOnly_;
    }
    /**
     * <pre>
     * Optional: Defaults to false (read/write). ReadOnly here will force
     * the ReadOnly setting in VolumeMounts.
     * </pre>
     *
     * <code>bool readOnly = 4;</code>
     */
    public Builder setReadOnly(boolean value) {
      
      readOnly_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Defaults to false (read/write). ReadOnly here will force
     * the ReadOnly setting in VolumeMounts.
     * </pre>
     *
     * <code>bool readOnly = 4;</code>
     */
    public Builder clearReadOnly() {
      
      readOnly_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> options_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetOptions() {
      if (options_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OptionsDefaultEntryHolder.defaultEntry);
      }
      return options_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableOptions() {
      onChanged();;
      if (options_ == null) {
        options_ = com.google.protobuf.MapField.newMapField(
            OptionsDefaultEntryHolder.defaultEntry);
      }
      if (!options_.isMutable()) {
        options_ = options_.copy();
      }
      return options_;
    }

    public int getOptionsCount() {
      return internalGetOptions().getMap().size();
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */

    public boolean containsOptions(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetOptions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOptionsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getOptions() {
      return getOptionsMap();
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
      return internalGetOptions().getMap();
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */

    public java.lang.String getOptionsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOptions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */

    public java.lang.String getOptionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOptions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOptions() {
      internalGetMutableOptions().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */

    public Builder removeOptions(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableOptions().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableOptions() {
      return internalGetMutableOptions().getMutableMap();
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */
    public Builder putOptions(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableOptions().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Optional: Extra command options if any.
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 5;</code>
     */

    public Builder putAllOptions(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableOptions().getMutableMap()
          .putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:appscode.kubernetes.v1beta2.FlexVolumeSource)
  }

  // @@protoc_insertion_point(class_scope:appscode.kubernetes.v1beta2.FlexVolumeSource)
  private static final com.appscode.api.kubernetes.v1beta2.FlexVolumeSource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.appscode.api.kubernetes.v1beta2.FlexVolumeSource();
  }

  public static com.appscode.api.kubernetes.v1beta2.FlexVolumeSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlexVolumeSource>
      PARSER = new com.google.protobuf.AbstractParser<FlexVolumeSource>() {
    public FlexVolumeSource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlexVolumeSource(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FlexVolumeSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlexVolumeSource> getParserForType() {
    return PARSER;
  }

  public com.appscode.api.kubernetes.v1beta2.FlexVolumeSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

