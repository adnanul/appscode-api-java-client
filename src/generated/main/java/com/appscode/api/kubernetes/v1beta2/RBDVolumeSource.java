// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

/**
 * <pre>
 * Represents a Rados Block Device mount that lasts the lifetime of a pod.
 * RBD volumes support ownership management and SELinux relabeling.
 * </pre>
 *
 * Protobuf type {@code appscode.kubernetes.v1beta2.RBDVolumeSource}
 */
public  final class RBDVolumeSource extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:appscode.kubernetes.v1beta2.RBDVolumeSource)
    RBDVolumeSourceOrBuilder {
  // Use RBDVolumeSource.newBuilder() to construct.
  private RBDVolumeSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RBDVolumeSource() {
    monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    image_ = "";
    fsType_ = "";
    pool_ = "";
    user_ = "";
    keyring_ = "";
    readOnly_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private RBDVolumeSource(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              monitors_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            monitors_.add(s);
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            image_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            fsType_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            pool_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            user_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            keyring_ = s;
            break;
          }
          case 58: {
            com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder subBuilder = null;
            if (secretRef_ != null) {
              subBuilder = secretRef_.toBuilder();
            }
            secretRef_ = input.readMessage(com.appscode.api.kubernetes.v1beta2.ObjectReference.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(secretRef_);
              secretRef_ = subBuilder.buildPartial();
            }

            break;
          }
          case 64: {

            readOnly_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        monitors_ = monitors_.getUnmodifiableView();
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_RBDVolumeSource_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_RBDVolumeSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.class, com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.Builder.class);
  }

  private int bitField0_;
  public static final int MONITORS_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList monitors_;
  /**
   * <pre>
   * A collection of Ceph monitors.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getMonitorsList() {
    return monitors_;
  }
  /**
   * <pre>
   * A collection of Ceph monitors.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public int getMonitorsCount() {
    return monitors_.size();
  }
  /**
   * <pre>
   * A collection of Ceph monitors.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public java.lang.String getMonitors(int index) {
    return monitors_.get(index);
  }
  /**
   * <pre>
   * A collection of Ceph monitors.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>repeated string monitors = 1;</code>
   */
  public com.google.protobuf.ByteString
      getMonitorsBytes(int index) {
    return monitors_.getByteString(index);
  }

  public static final int IMAGE_FIELD_NUMBER = 2;
  private volatile java.lang.Object image_;
  /**
   * <pre>
   * The rados image name.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional string image = 2;</code>
   */
  public java.lang.String getImage() {
    java.lang.Object ref = image_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      image_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The rados image name.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional string image = 2;</code>
   */
  public com.google.protobuf.ByteString
      getImageBytes() {
    java.lang.Object ref = image_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      image_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FSTYPE_FIELD_NUMBER = 3;
  private volatile java.lang.Object fsType_;
  /**
   * <pre>
   * Filesystem type of the volume that you want to mount.
   * Tip: Ensure that the filesystem type is supported by the host operating system.
   * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
   * TODO: how do we prevent errors in the filesystem from compromising the machine
   * </pre>
   *
   * <code>optional string fsType = 3;</code>
   */
  public java.lang.String getFsType() {
    java.lang.Object ref = fsType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fsType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Filesystem type of the volume that you want to mount.
   * Tip: Ensure that the filesystem type is supported by the host operating system.
   * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
   * TODO: how do we prevent errors in the filesystem from compromising the machine
   * </pre>
   *
   * <code>optional string fsType = 3;</code>
   */
  public com.google.protobuf.ByteString
      getFsTypeBytes() {
    java.lang.Object ref = fsType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fsType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POOL_FIELD_NUMBER = 4;
  private volatile java.lang.Object pool_;
  /**
   * <pre>
   * The rados pool name.
   * Default is rbd.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
   * </pre>
   *
   * <code>optional string pool = 4;</code>
   */
  public java.lang.String getPool() {
    java.lang.Object ref = pool_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pool_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The rados pool name.
   * Default is rbd.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
   * </pre>
   *
   * <code>optional string pool = 4;</code>
   */
  public com.google.protobuf.ByteString
      getPoolBytes() {
    java.lang.Object ref = pool_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pool_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_FIELD_NUMBER = 5;
  private volatile java.lang.Object user_;
  /**
   * <pre>
   * The rados user name.
   * Default is admin.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional string user = 5;</code>
   */
  public java.lang.String getUser() {
    java.lang.Object ref = user_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      user_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The rados user name.
   * Default is admin.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional string user = 5;</code>
   */
  public com.google.protobuf.ByteString
      getUserBytes() {
    java.lang.Object ref = user_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      user_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEYRING_FIELD_NUMBER = 6;
  private volatile java.lang.Object keyring_;
  /**
   * <pre>
   * Keyring is the path to key ring for RBDUser.
   * Default is /etc/ceph/keyring.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional string keyring = 6;</code>
   */
  public java.lang.String getKeyring() {
    java.lang.Object ref = keyring_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyring_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Keyring is the path to key ring for RBDUser.
   * Default is /etc/ceph/keyring.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional string keyring = 6;</code>
   */
  public com.google.protobuf.ByteString
      getKeyringBytes() {
    java.lang.Object ref = keyring_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyring_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECRETREF_FIELD_NUMBER = 7;
  private com.appscode.api.kubernetes.v1beta2.ObjectReference secretRef_;
  /**
   * <pre>
   * SecretRef is name of the authentication secret for RBDUser. If provided
   * overrides keyring.
   * Default is nil.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
   */
  public boolean hasSecretRef() {
    return secretRef_ != null;
  }
  /**
   * <pre>
   * SecretRef is name of the authentication secret for RBDUser. If provided
   * overrides keyring.
   * Default is nil.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef() {
    return secretRef_ == null ? com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
  }
  /**
   * <pre>
   * SecretRef is name of the authentication secret for RBDUser. If provided
   * overrides keyring.
   * Default is nil.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
   */
  public com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder() {
    return getSecretRef();
  }

  public static final int READONLY_FIELD_NUMBER = 8;
  private boolean readOnly_;
  /**
   * <pre>
   * ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * Defaults to false.
   * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
   * </pre>
   *
   * <code>optional bool readOnly = 8;</code>
   */
  public boolean getReadOnly() {
    return readOnly_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < monitors_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, monitors_.getRaw(i));
    }
    if (!getImageBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, image_);
    }
    if (!getFsTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fsType_);
    }
    if (!getPoolBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pool_);
    }
    if (!getUserBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, user_);
    }
    if (!getKeyringBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, keyring_);
    }
    if (secretRef_ != null) {
      output.writeMessage(7, getSecretRef());
    }
    if (readOnly_ != false) {
      output.writeBool(8, readOnly_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < monitors_.size(); i++) {
        dataSize += computeStringSizeNoTag(monitors_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getMonitorsList().size();
    }
    if (!getImageBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, image_);
    }
    if (!getFsTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fsType_);
    }
    if (!getPoolBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pool_);
    }
    if (!getUserBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, user_);
    }
    if (!getKeyringBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, keyring_);
    }
    if (secretRef_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getSecretRef());
    }
    if (readOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, readOnly_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.appscode.api.kubernetes.v1beta2.RBDVolumeSource)) {
      return super.equals(obj);
    }
    com.appscode.api.kubernetes.v1beta2.RBDVolumeSource other = (com.appscode.api.kubernetes.v1beta2.RBDVolumeSource) obj;

    boolean result = true;
    result = result && getMonitorsList()
        .equals(other.getMonitorsList());
    result = result && getImage()
        .equals(other.getImage());
    result = result && getFsType()
        .equals(other.getFsType());
    result = result && getPool()
        .equals(other.getPool());
    result = result && getUser()
        .equals(other.getUser());
    result = result && getKeyring()
        .equals(other.getKeyring());
    result = result && (hasSecretRef() == other.hasSecretRef());
    if (hasSecretRef()) {
      result = result && getSecretRef()
          .equals(other.getSecretRef());
    }
    result = result && (getReadOnly()
        == other.getReadOnly());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getMonitorsCount() > 0) {
      hash = (37 * hash) + MONITORS_FIELD_NUMBER;
      hash = (53 * hash) + getMonitorsList().hashCode();
    }
    hash = (37 * hash) + IMAGE_FIELD_NUMBER;
    hash = (53 * hash) + getImage().hashCode();
    hash = (37 * hash) + FSTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getFsType().hashCode();
    hash = (37 * hash) + POOL_FIELD_NUMBER;
    hash = (53 * hash) + getPool().hashCode();
    hash = (37 * hash) + USER_FIELD_NUMBER;
    hash = (53 * hash) + getUser().hashCode();
    hash = (37 * hash) + KEYRING_FIELD_NUMBER;
    hash = (53 * hash) + getKeyring().hashCode();
    if (hasSecretRef()) {
      hash = (37 * hash) + SECRETREF_FIELD_NUMBER;
      hash = (53 * hash) + getSecretRef().hashCode();
    }
    hash = (37 * hash) + READONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReadOnly());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.appscode.api.kubernetes.v1beta2.RBDVolumeSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a Rados Block Device mount that lasts the lifetime of a pod.
   * RBD volumes support ownership management and SELinux relabeling.
   * </pre>
   *
   * Protobuf type {@code appscode.kubernetes.v1beta2.RBDVolumeSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:appscode.kubernetes.v1beta2.RBDVolumeSource)
      com.appscode.api.kubernetes.v1beta2.RBDVolumeSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_RBDVolumeSource_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_RBDVolumeSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.class, com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.Builder.class);
    }

    // Construct using com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      image_ = "";

      fsType_ = "";

      pool_ = "";

      user_ = "";

      keyring_ = "";

      if (secretRefBuilder_ == null) {
        secretRef_ = null;
      } else {
        secretRef_ = null;
        secretRefBuilder_ = null;
      }
      readOnly_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.appscode.api.kubernetes.v1beta2.ClientProto.internal_static_appscode_kubernetes_v1beta2_RBDVolumeSource_descriptor;
    }

    public com.appscode.api.kubernetes.v1beta2.RBDVolumeSource getDefaultInstanceForType() {
      return com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.getDefaultInstance();
    }

    public com.appscode.api.kubernetes.v1beta2.RBDVolumeSource build() {
      com.appscode.api.kubernetes.v1beta2.RBDVolumeSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.appscode.api.kubernetes.v1beta2.RBDVolumeSource buildPartial() {
      com.appscode.api.kubernetes.v1beta2.RBDVolumeSource result = new com.appscode.api.kubernetes.v1beta2.RBDVolumeSource(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        monitors_ = monitors_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.monitors_ = monitors_;
      result.image_ = image_;
      result.fsType_ = fsType_;
      result.pool_ = pool_;
      result.user_ = user_;
      result.keyring_ = keyring_;
      if (secretRefBuilder_ == null) {
        result.secretRef_ = secretRef_;
      } else {
        result.secretRef_ = secretRefBuilder_.build();
      }
      result.readOnly_ = readOnly_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.appscode.api.kubernetes.v1beta2.RBDVolumeSource) {
        return mergeFrom((com.appscode.api.kubernetes.v1beta2.RBDVolumeSource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.appscode.api.kubernetes.v1beta2.RBDVolumeSource other) {
      if (other == com.appscode.api.kubernetes.v1beta2.RBDVolumeSource.getDefaultInstance()) return this;
      if (!other.monitors_.isEmpty()) {
        if (monitors_.isEmpty()) {
          monitors_ = other.monitors_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureMonitorsIsMutable();
          monitors_.addAll(other.monitors_);
        }
        onChanged();
      }
      if (!other.getImage().isEmpty()) {
        image_ = other.image_;
        onChanged();
      }
      if (!other.getFsType().isEmpty()) {
        fsType_ = other.fsType_;
        onChanged();
      }
      if (!other.getPool().isEmpty()) {
        pool_ = other.pool_;
        onChanged();
      }
      if (!other.getUser().isEmpty()) {
        user_ = other.user_;
        onChanged();
      }
      if (!other.getKeyring().isEmpty()) {
        keyring_ = other.keyring_;
        onChanged();
      }
      if (other.hasSecretRef()) {
        mergeSecretRef(other.getSecretRef());
      }
      if (other.getReadOnly() != false) {
        setReadOnly(other.getReadOnly());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.appscode.api.kubernetes.v1beta2.RBDVolumeSource parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.appscode.api.kubernetes.v1beta2.RBDVolumeSource) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureMonitorsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        monitors_ = new com.google.protobuf.LazyStringArrayList(monitors_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getMonitorsList() {
      return monitors_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public int getMonitorsCount() {
      return monitors_.size();
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public java.lang.String getMonitors(int index) {
      return monitors_.get(index);
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMonitorsBytes(int index) {
      return monitors_.getByteString(index);
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder setMonitors(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorsIsMutable();
      monitors_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder addMonitors(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMonitorsIsMutable();
      monitors_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder addAllMonitors(
        java.lang.Iterable<java.lang.String> values) {
      ensureMonitorsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, monitors_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder clearMonitors() {
      monitors_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of Ceph monitors.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>repeated string monitors = 1;</code>
     */
    public Builder addMonitorsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureMonitorsIsMutable();
      monitors_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object image_ = "";
    /**
     * <pre>
     * The rados image name.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string image = 2;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        image_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The rados image name.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string image = 2;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The rados image name.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string image = 2;</code>
     */
    public Builder setImage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      image_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rados image name.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string image = 2;</code>
     */
    public Builder clearImage() {
      
      image_ = getDefaultInstance().getImage();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rados image name.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string image = 2;</code>
     */
    public Builder setImageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      image_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fsType_ = "";
    /**
     * <pre>
     * Filesystem type of the volume that you want to mount.
     * Tip: Ensure that the filesystem type is supported by the host operating system.
     * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
     * TODO: how do we prevent errors in the filesystem from compromising the machine
     * </pre>
     *
     * <code>optional string fsType = 3;</code>
     */
    public java.lang.String getFsType() {
      java.lang.Object ref = fsType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fsType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Filesystem type of the volume that you want to mount.
     * Tip: Ensure that the filesystem type is supported by the host operating system.
     * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
     * TODO: how do we prevent errors in the filesystem from compromising the machine
     * </pre>
     *
     * <code>optional string fsType = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFsTypeBytes() {
      java.lang.Object ref = fsType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fsType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Filesystem type of the volume that you want to mount.
     * Tip: Ensure that the filesystem type is supported by the host operating system.
     * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
     * TODO: how do we prevent errors in the filesystem from compromising the machine
     * </pre>
     *
     * <code>optional string fsType = 3;</code>
     */
    public Builder setFsType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fsType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filesystem type of the volume that you want to mount.
     * Tip: Ensure that the filesystem type is supported by the host operating system.
     * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
     * TODO: how do we prevent errors in the filesystem from compromising the machine
     * </pre>
     *
     * <code>optional string fsType = 3;</code>
     */
    public Builder clearFsType() {
      
      fsType_ = getDefaultInstance().getFsType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filesystem type of the volume that you want to mount.
     * Tip: Ensure that the filesystem type is supported by the host operating system.
     * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#rbd
     * TODO: how do we prevent errors in the filesystem from compromising the machine
     * </pre>
     *
     * <code>optional string fsType = 3;</code>
     */
    public Builder setFsTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fsType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object pool_ = "";
    /**
     * <pre>
     * The rados pool name.
     * Default is rbd.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
     * </pre>
     *
     * <code>optional string pool = 4;</code>
     */
    public java.lang.String getPool() {
      java.lang.Object ref = pool_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pool_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The rados pool name.
     * Default is rbd.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
     * </pre>
     *
     * <code>optional string pool = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPoolBytes() {
      java.lang.Object ref = pool_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pool_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The rados pool name.
     * Default is rbd.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
     * </pre>
     *
     * <code>optional string pool = 4;</code>
     */
    public Builder setPool(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pool_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rados pool name.
     * Default is rbd.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
     * </pre>
     *
     * <code>optional string pool = 4;</code>
     */
    public Builder clearPool() {
      
      pool_ = getDefaultInstance().getPool();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rados pool name.
     * Default is rbd.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it.
     * </pre>
     *
     * <code>optional string pool = 4;</code>
     */
    public Builder setPoolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pool_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object user_ = "";
    /**
     * <pre>
     * The rados user name.
     * Default is admin.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string user = 5;</code>
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The rados user name.
     * Default is admin.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string user = 5;</code>
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The rados user name.
     * Default is admin.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string user = 5;</code>
     */
    public Builder setUser(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      user_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rados user name.
     * Default is admin.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string user = 5;</code>
     */
    public Builder clearUser() {
      
      user_ = getDefaultInstance().getUser();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rados user name.
     * Default is admin.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string user = 5;</code>
     */
    public Builder setUserBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      user_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object keyring_ = "";
    /**
     * <pre>
     * Keyring is the path to key ring for RBDUser.
     * Default is /etc/ceph/keyring.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string keyring = 6;</code>
     */
    public java.lang.String getKeyring() {
      java.lang.Object ref = keyring_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyring_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Keyring is the path to key ring for RBDUser.
     * Default is /etc/ceph/keyring.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string keyring = 6;</code>
     */
    public com.google.protobuf.ByteString
        getKeyringBytes() {
      java.lang.Object ref = keyring_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyring_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Keyring is the path to key ring for RBDUser.
     * Default is /etc/ceph/keyring.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string keyring = 6;</code>
     */
    public Builder setKeyring(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyring_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Keyring is the path to key ring for RBDUser.
     * Default is /etc/ceph/keyring.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string keyring = 6;</code>
     */
    public Builder clearKeyring() {
      
      keyring_ = getDefaultInstance().getKeyring();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Keyring is the path to key ring for RBDUser.
     * Default is /etc/ceph/keyring.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional string keyring = 6;</code>
     */
    public Builder setKeyringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyring_ = value;
      onChanged();
      return this;
    }

    private com.appscode.api.kubernetes.v1beta2.ObjectReference secretRef_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder> secretRefBuilder_;
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public boolean hasSecretRef() {
      return secretRefBuilder_ != null || secretRef_ != null;
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReference getSecretRef() {
      if (secretRefBuilder_ == null) {
        return secretRef_ == null ? com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
      } else {
        return secretRefBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public Builder setSecretRef(com.appscode.api.kubernetes.v1beta2.ObjectReference value) {
      if (secretRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        secretRef_ = value;
        onChanged();
      } else {
        secretRefBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public Builder setSecretRef(
        com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder builderForValue) {
      if (secretRefBuilder_ == null) {
        secretRef_ = builderForValue.build();
        onChanged();
      } else {
        secretRefBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public Builder mergeSecretRef(com.appscode.api.kubernetes.v1beta2.ObjectReference value) {
      if (secretRefBuilder_ == null) {
        if (secretRef_ != null) {
          secretRef_ =
            com.appscode.api.kubernetes.v1beta2.ObjectReference.newBuilder(secretRef_).mergeFrom(value).buildPartial();
        } else {
          secretRef_ = value;
        }
        onChanged();
      } else {
        secretRefBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public Builder clearSecretRef() {
      if (secretRefBuilder_ == null) {
        secretRef_ = null;
        onChanged();
      } else {
        secretRef_ = null;
        secretRefBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder getSecretRefBuilder() {
      
      onChanged();
      return getSecretRefFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    public com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder getSecretRefOrBuilder() {
      if (secretRefBuilder_ != null) {
        return secretRefBuilder_.getMessageOrBuilder();
      } else {
        return secretRef_ == null ?
            com.appscode.api.kubernetes.v1beta2.ObjectReference.getDefaultInstance() : secretRef_;
      }
    }
    /**
     * <pre>
     * SecretRef is name of the authentication secret for RBDUser. If provided
     * overrides keyring.
     * Default is nil.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional .appscode.kubernetes.v1beta2.ObjectReference secretRef = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder> 
        getSecretRefFieldBuilder() {
      if (secretRefBuilder_ == null) {
        secretRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.appscode.api.kubernetes.v1beta2.ObjectReference, com.appscode.api.kubernetes.v1beta2.ObjectReference.Builder, com.appscode.api.kubernetes.v1beta2.ObjectReferenceOrBuilder>(
                getSecretRef(),
                getParentForChildren(),
                isClean());
        secretRef_ = null;
      }
      return secretRefBuilder_;
    }

    private boolean readOnly_ ;
    /**
     * <pre>
     * ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * Defaults to false.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional bool readOnly = 8;</code>
     */
    public boolean getReadOnly() {
      return readOnly_;
    }
    /**
     * <pre>
     * ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * Defaults to false.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional bool readOnly = 8;</code>
     */
    public Builder setReadOnly(boolean value) {
      
      readOnly_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * Defaults to false.
     * More info: http://releases.k8s.io/release-1.4/examples/volumes/rbd/README.md#how-to-use-it
     * </pre>
     *
     * <code>optional bool readOnly = 8;</code>
     */
    public Builder clearReadOnly() {
      
      readOnly_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:appscode.kubernetes.v1beta2.RBDVolumeSource)
  }

  // @@protoc_insertion_point(class_scope:appscode.kubernetes.v1beta2.RBDVolumeSource)
  private static final com.appscode.api.kubernetes.v1beta2.RBDVolumeSource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.appscode.api.kubernetes.v1beta2.RBDVolumeSource();
  }

  public static com.appscode.api.kubernetes.v1beta2.RBDVolumeSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RBDVolumeSource>
      PARSER = new com.google.protobuf.AbstractParser<RBDVolumeSource>() {
    public RBDVolumeSource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RBDVolumeSource(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RBDVolumeSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RBDVolumeSource> getParserForType() {
    return PARSER;
  }

  public com.appscode.api.kubernetes.v1beta2.RBDVolumeSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

