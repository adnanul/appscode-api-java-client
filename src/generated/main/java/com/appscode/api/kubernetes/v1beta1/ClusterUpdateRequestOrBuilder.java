// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta1/cluster.proto

package com.appscode.api.kubernetes.v1beta1;

public interface ClusterUpdateRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:appscode.kubernetes.v1beta1.ClusterUpdateRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1;</code>
   */
  java.lang.String getName();
  /**
   * <code>string name = 1;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>bool do_not_delete = 2;</code>
   */
  boolean getDoNotDelete();

  /**
   * <code>.appscode.kubernetes.v1beta1.ClusterSettings settings = 3;</code>
   */
  boolean hasSettings();
  /**
   * <code>.appscode.kubernetes.v1beta1.ClusterSettings settings = 3;</code>
   */
  com.appscode.api.kubernetes.v1beta1.ClusterSettings getSettings();
  /**
   * <code>.appscode.kubernetes.v1beta1.ClusterSettings settings = 3;</code>
   */
  com.appscode.api.kubernetes.v1beta1.ClusterSettingsOrBuilder getSettingsOrBuilder();

  /**
   * <pre>
   * Default access level is to allow permission to the cluster
   * when no Role matched for that specif user or group. This can
   * set as
   *   - kubernetes:team-admin
   *   - kubernetes:cluster-admin
   *   - kubernetes:admin
   *   - kubernetes:editor
   *   - kubernetes:viewer
   *   - deny-access
   * </pre>
   *
   * <code>string default_access_level = 4;</code>
   */
  java.lang.String getDefaultAccessLevel();
  /**
   * <pre>
   * Default access level is to allow permission to the cluster
   * when no Role matched for that specif user or group. This can
   * set as
   *   - kubernetes:team-admin
   *   - kubernetes:cluster-admin
   *   - kubernetes:admin
   *   - kubernetes:editor
   *   - kubernetes:viewer
   *   - deny-access
   * </pre>
   *
   * <code>string default_access_level = 4;</code>
   */
  com.google.protobuf.ByteString
      getDefaultAccessLevelBytes();
}
