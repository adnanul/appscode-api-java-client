// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appscode/api/kubernetes/v1beta2/client.proto

package com.appscode.api.kubernetes.v1beta2;

public interface ISCSIVolumeSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:appscode.kubernetes.v1beta2.ISCSIVolumeSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * iSCSI target portal. The portal is either an IP or ip_addr:port if the port
   * is other than default (typically TCP ports 860 and 3260).
   * </pre>
   *
   * <code>string targetPortal = 1;</code>
   */
  java.lang.String getTargetPortal();
  /**
   * <pre>
   * iSCSI target portal. The portal is either an IP or ip_addr:port if the port
   * is other than default (typically TCP ports 860 and 3260).
   * </pre>
   *
   * <code>string targetPortal = 1;</code>
   */
  com.google.protobuf.ByteString
      getTargetPortalBytes();

  /**
   * <pre>
   * Target iSCSI Qualified Name.
   * </pre>
   *
   * <code>string iqn = 2;</code>
   */
  java.lang.String getIqn();
  /**
   * <pre>
   * Target iSCSI Qualified Name.
   * </pre>
   *
   * <code>string iqn = 2;</code>
   */
  com.google.protobuf.ByteString
      getIqnBytes();

  /**
   * <pre>
   * iSCSI target lun number.
   * </pre>
   *
   * <code>int32 lun = 3;</code>
   */
  int getLun();

  /**
   * <pre>
   * Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an iSCSI transport.
   * </pre>
   *
   * <code>string iscsiInterface = 4;</code>
   */
  java.lang.String getIscsiInterface();
  /**
   * <pre>
   * Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an iSCSI transport.
   * </pre>
   *
   * <code>string iscsiInterface = 4;</code>
   */
  com.google.protobuf.ByteString
      getIscsiInterfaceBytes();

  /**
   * <pre>
   * Filesystem type of the volume that you want to mount.
   * Tip: Ensure that the filesystem type is supported by the host operating system.
   * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#iscsi
   * TODO: how do we prevent errors in the filesystem from compromising the machine
   * </pre>
   *
   * <code>string fsType = 5;</code>
   */
  java.lang.String getFsType();
  /**
   * <pre>
   * Filesystem type of the volume that you want to mount.
   * Tip: Ensure that the filesystem type is supported by the host operating system.
   * Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   * More info: http://releases.k8s.io/release-1.4/docs/user-guide/volumes.md#iscsi
   * TODO: how do we prevent errors in the filesystem from compromising the machine
   * </pre>
   *
   * <code>string fsType = 5;</code>
   */
  com.google.protobuf.ByteString
      getFsTypeBytes();

  /**
   * <pre>
   * ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * Defaults to false.
   * </pre>
   *
   * <code>bool readOnly = 6;</code>
   */
  boolean getReadOnly();
}
