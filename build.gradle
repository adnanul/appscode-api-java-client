apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

group = "com.appscode.api"
version = '0.13.2-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = [
                "${projectDir}/src/main/java",
                "${projectDir}/src/generated/main/java",
                "${projectDir}/src/generated/main/grpc"
            ]
        }
    }
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.3.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.3.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
}

dependencies {
    compile 'com.google.protobuf:protobuf-java:3.3.0'
    compile 'io.grpc:grpc-netty:1.3.0'
    compile 'io.grpc:grpc-protobuf:1.3.0'
    compile 'io.grpc:grpc-auth:1.3.0'
    compile 'io.grpc:grpc-stub:1.3.0'
    compile 'com.google.api.grpc:grpc-google-common-protos:0.1.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6'
    testCompile 'junit:junit:4.10'
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java");
        sourceDirs += file("${projectDir}/src/generated/main/grpc");
    }
}

// https://github.com/GPars/GPars/blob/master/build.gradle#L208
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        // disable the crazy super-strict doclint tool in Java 8
        //noinspection SpellCheckingInspection
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'appscode-api-java-client'
        // artifactId 'java-client'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'Java Client library for AppsCode APIs(https://github.com/appscode/api)'
        url 'https://github.com/appscode/appscode-api-java-client'

        scm {
          connection 'scm:git:https://github.com/appscode/appscode-api-java-client.git'
          developerConnection 'scm:git:git@github.com:appscode/appscode-api-java-client.git'
          url 'https://github.com/appscode/appscode-api-java-client'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'appscode-eng'
            name 'AppsCode Engineering'
            email 'support@appscode.com'
          }
        }
      }
    }
  }
}
